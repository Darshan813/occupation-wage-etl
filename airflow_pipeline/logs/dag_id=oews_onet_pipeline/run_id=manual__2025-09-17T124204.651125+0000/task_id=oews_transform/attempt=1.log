{"timestamp":"2025-09-17T12:43:02.957633","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-17T12:43:02.958845","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/oews_onet_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-17T12:43:03.565928Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T12:43:03.567101Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T12:43:03.567817Z","level":"info","event":"Current task name:oews_transform","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T12:43:03.568518Z","level":"info","event":"Dag name:oews_onet_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T12:43:03.733495","level":"warning","event":"/opt/airflow/pipeline/load_data.py:138: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n  self.df = self.df.applymap(self.clean_data)\n","logger":"py.warnings"}
{"timestamp":"2025-09-17T12:43:04.049160","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-17T12:43:04.132687Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T12:43:04.133739Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T12:43:04.134980Z","level":"info","event":"Task operator:<Task(PythonOperator): oews_transform>","chan":"stdout","logger":"task"}
