{"timestamp":"2025-09-16T20:46:14.816280","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-16T20:46:14.817026","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/oews_onet_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-16T20:46:15.084751Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.086081Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.087967Z","level":"info","event":"Current task name:onet_load","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.089307Z","level":"info","event":"Dag name:oews_onet_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.217594Z","level":"info","event":"Creating tables","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.234936Z","level":"info","event":"Table onet_skills created or already exists.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.235948Z","level":"info","event":"Tables created successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.236876Z","level":"info","event":"Saving to database...","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.255887","level":"warning","event":"/opt/airflow/pipeline/load_data.py:213: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df.to_sql(table_name, conn, if_exists='append', index=False)\n","logger":"py.warnings"}
{"timestamp":"2025-09-16T20:46:15.265252Z","level":"info","event":"Error saving to database: 'Connection' object has no attribute 'cursor'","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.267950","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-16T20:46:15.295292Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.298105Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T20:46:15.298832Z","level":"info","event":"Task operator:<Task(PythonOperator): onet_load>","chan":"stdout","logger":"task"}
