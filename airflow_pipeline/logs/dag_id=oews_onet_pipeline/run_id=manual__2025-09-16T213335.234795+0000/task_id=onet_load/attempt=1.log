{"timestamp":"2025-09-16T21:33:59.132192","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-16T21:33:59.133236","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/oews_onet_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-16T21:33:59.383049Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.384115Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.384706Z","level":"info","event":"Current task name:onet_load","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.385132Z","level":"info","event":"Dag name:oews_onet_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.517603Z","level":"info","event":"Creating tables","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.555113Z","level":"info","event":"Table onet_skills created or already exists.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.556113Z","level":"info","event":"Tables created successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.575804","level":"warning","event":"/opt/airflow/pipeline/load_data.py:212: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df.to_sql(table_name, conn, if_exists='append', index=False)\n","logger":"py.warnings"}
{"timestamp":"2025-09-16T21:33:59.589319Z","level":"info","event":"Error saving to database: 'Connection' object has no attribute 'cursor'","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.593104","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-16T21:33:59.616689Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.617356Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-16T21:33:59.618742Z","level":"info","event":"Task operator:<Task(PythonOperator): onet_load>","chan":"stdout","logger":"task"}
